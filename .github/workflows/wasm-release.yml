name: WebAssembly Publish

on: [push]

defaults:
  run:
    working-directory: src/api/js

env:
  EM_VERSION: 3.1.0

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Prepare for publish
        run: |
          npm version $(node -e 'console.log(fs.readFileSync("../../../scripts/release.yml", "utf8").match(/ReleaseVersion:\s*\x27(\S+)\x27/)[1])')
          mv PUBLISHED_README.md README.md
          cp ../../../LICENSE.txt .

      - name: Setup emscripten
        uses: mymindstorm/setup-emsdk@v11
        with:
          no-install: true
          version: ${{env.EM_VERSION}}
          actions-cache-folder: 'emsdk-cache'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build-ts

      - name: Build wasm
        run: |
          emsdk install ${EM_VERSION}
          emsdk activate ${EM_VERSION}
          source $(dirname $(which emsdk))/emsdk_env.sh
          which node
          which clang++
          npm run build-wasm

      - name: Test
        run: npm test

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  Build-aarch64:
    name: "Build and test ${{ matrix.pyver }} aarch64 wheel"
    strategy:
      matrix:
        pyver: [cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build Wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install --upgrade pip && \
            chmod +x scripts/release.yml && \
            ./scripts/release.yml && \
            deactivate'
